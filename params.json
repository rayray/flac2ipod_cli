{"tagline":"For OS X.  Converts your FLACs to MP3s and pushes them to your iPod/iPhone.  Work in progress.","name":"FLAC2iPod (CLI)","google":"","body":"# FLAC2iPod CLI for OS X\r\n\r\n##Current status \r\nUsable, but I've only tested with my iPod on the computer it is registered with, \r\nso I make no guarantees about how it will operate in other situations.  It won't\r\nbrick your device, but who knows how iTunes will react in some circumstances.\r\n\r\n**Back up your playlists/music, and of course, use at your own risk.**\r\n\r\nMultithreading work is in progress.\r\n\r\n###Known Bugs\r\n**For iPad 2 running iOS 5.1.1**, iTunes does not wait until syncing is finished\r\nbefore giving my app a reference to the track on the device.  This results in\r\nmy app deleting MP3s before they are finished uploading to the device.\r\n\r\n##Description\r\nThis is a command line program that accepts either FLAC file(s) or a \r\ndirectory of FLACs, converts the FLACs to MP3s, and loads\r\nthe MP3s to a connected iPod or iPhone.\r\n\r\n`flac2ipod` will only take the FLACs in the top level of your directory, ignoring\r\nany subdirectories.  This seems safe.\r\n\r\nThe loaded MP3s bypass the iTunes Library, and after syncing, the MP3s\r\nwill be deleted from your computer.\r\n\r\nThe following metadata is carried over to MP3:\r\n\r\n- Artist\r\n- Album\r\n- Track title\r\n- Date\r\n- Track number\r\n- Genre\r\n\r\n##Example Usage\r\nPlug in your iDevice and open iTunes.\r\n\r\nPut \"a flac flacy.flac\" on your device.\r\n\r\n    ./flac2ipod /Volumes/My\\ External\\ Musics/a\\ flac\\ flacy.flac\r\n\r\nPut \"song1.flac\" and \"song2.flac\" on your device.\r\n\r\n    ./flac2ipod song1.flac song2.flac\r\n\r\nPut a directory of FLACs on your device.\r\n\r\n    ./flac2ipod /Volumes/My\\ External\\ Musics/Songs\\ To\\ Fan\\ The\\ Flames\\ of\\ Discontent/\r\n\r\n##Running Requirements\r\n- OS X Leopard or later\r\n- iTunes must be running (that's how it has to be, sorry)\r\n- `flac`, `metaflac` and `lame` must be installed and available in your bash $PATH\r\n - I recommend installing the above with [Homebrew](http://mxcl.github.com/homebrew/) (`brew install flac` will provide everything you need)\r\n- And your iPod or iPhone needs to be connected, natch\r\n\r\n##TO-DO\r\n- Add album art if available\r\n- Multithreaded conversion of multiple files\r\n- Find bugs\r\n- autotools\r\n\r\n##Compiling\r\nThis program uses the Foundation and Scripting Bridge frameworks.\r\n\r\nFirst, you need to generate the Scripting Bridge header file for iTunes.  In the same\r\nfolder as `main.m`, execute this:\r\n\r\n    sdef /Applications/iTunes.app | sdp -fh --basename iTunes\r\n\r\nThe `iTunes.h` header should be in your current folder.\r\n\r\nNow compile with:\r\n\r\n    gcc -std=c99 -framework Foundation -framework ScriptingBridge main.m -o flac2ipod\r\n\r\nThis may change in the future.\r\n\r\n##License\r\nGPLv3.  The Scripting Bridge (including the iTunes scripting API) and Foundation \r\nframeworks are system libraries and are thus exempt.\r\n","note":"Don't delete this file! It's used internally to help with page regeneration."}